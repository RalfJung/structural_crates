(
  cases:[
    (
      name:"access attribute",
      code:r##"
        #[struc(access="#replaced")]
        struct Huh{
            pub a:u32,
        }
      "##,
      subcase: [
        ( replacements: { "#replaced":"ooh" }, error_count: 1 ),
        ( replacements: { "#replaced":"ref" }, error_count: 0 ),
        ( replacements: { "#replaced":"mut" }, error_count: 0 ),
        ( replacements: { "#replaced":"move" }, error_count: 0 ),
      ],
    ),
    (
      name:"rename attribute",
      code:r##"
        struct Huh{
            #[struc(rename="#replaced")]
            pub original:u32,
        }
      "##,
      subcase: [
        (
          replacements: { "#replaced":"hello" },
          find_all:[str("STR_hello"),regex("original *: *u32")], 
          error_count: 0,
        ),
        (
          replacements: { "#replaced":"world" },
          find_all:[str("STR_world"),regex("original *: *u32")], 
          error_count: 0,
        ),
        (
          replacements: { "#replaced":"0" },
          find_all:[str("STR_0"),regex("original *: *u32")], 
          error_count: 0,
        ),
      ],
    ),
    (
      name:"valid_path_attributes",
      code:r##"
        #[struc(#replaced)]
        struct Huh{
            pub a:u32,
        }
      "##,
      subcase: [
        ( replacements: { "#replaced":"ooh" }, error_count: 1 ),
        ( replacements: { "#replaced":"yeah" }, error_count: 1 ),
        ( replacements: { "#replaced":"public" }, error_count: 0 ),
        ( replacements: { "#replaced":"not_public" }, error_count: 0 ),
        ( replacements: { "#replaced":"private" }, error_count: 0 ),
      ],
    ),
  ]
)
